{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/GoDeploy/AZ300/master/xg-azure-master",
            "metadata": {
                "artifactsBaseUrl": "Base URL of the template package"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "myOnPremFW",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "payg"
            ],
            "metadata": {
                "description": "License type to use."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "netNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Virtual Network or use an existing one."
            }
        },
        "netRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of existing Virtual Network (optional)."
            }
        },
        "netName": {
            "type": "string",
            "defaultValue": "VNET",
            "metadata": {
                "description": "Name of the Virtual Network."
            }
        },
        "netPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Prefix for the Virtual Network."
            }
        },
        "wanName": {
            "type": "string",
            "defaultValue": "WAN",
            "metadata": {
                "description": "Name of the WAN side Subnet."
            }
        },
        "wanPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Prefix for the WAN side Subnet."
            }
        },
        "lanName": {
            "type": "string",
            "defaultValue": "LAN",
            "metadata": {
                "description": "Name of the LAN side Subnet."
            }
        },
        "lanPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "Prefix for the LAN side Subnet."
            }
        },
        "publicIpNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Public IP or use an existing one."
            }
        },
        "publicIpRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of existing Public IP (optional)."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "PublicIP",
            "metadata": {
                "description": "Name of the Public IP."
            }
        },
        "publicIpDNS": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS name prefix for Public IP."
            }
        },
        "storageNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Storage Account or use an existing one."
            }
        },
        "storageRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of existing Storage Account (optional)."
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Unique name for Storage Account."
            }
        },
        "storageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication mode for Storage Account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "southeastasia",
            "metadata": {
                "description": "Geo-Location you want to deploy to."
            }
        },
        "nicWan": {
            "type": "string",
            "defaultValue": "PortB",
            "metadata": {
                "description": "Network Interface Name for WAN Zone"
            }
        },
        "nicLan": {
            "type": "string",
            "defaultValue": "PortA",
            "metadata": {
                "description": "Network Interface Name for LAN Zone"
            }
        },
        "networkSecurityGroupNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Network Security Group or use an existing one."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "SecurityGroup",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "trustedNetwork": {
            "type": "string",
            "defaultValue": "*",
            "metadata": {
                "description": "Trusted network for admin access. Using * will allow traffic from everywhere; using a CIDR notation, e.g., 203.0.113.0/24, will only allow traffic from that network range."
            }
        },
        "availabilitySetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Availability Set or use an existing one."
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "AvailabilitySet",
            "metadata": {
                "description": "Name of the Availability Set"
            }
        },
        "devFwBlobUrlPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "For development only! Specifies the blob URL prefix of a development firmware. Example: https://exampleimages.blob.core.windows.net/azi/SFAZ01_SO01.Release_17.0_CLOUD.17.00.0.007.byol"
            }
        }
    },
    "variables": {
        "publicIpTemplate": "[concat(parameters('baseUrl'),'/shared/publicip-',parameters('publicIpNewOrExisting'),'.json')]",
        "netTemplate": "[concat(parameters('baseUrl'),'/shared/vnet-',parameters('netNewOrExisting'),'.json')]",
        "storageTemplate": "[concat(parameters('baseUrl'),'/shared/storageAccount-',parameters('storageNewOrExisting'),'.json')]",
        "availabilitySetTemplate": "[concat(parameters('baseUrl'),'/shared/availabilitySet-',parameters('availabilitySetNewOrExisting'), if(equals(parameters('devFwBlobUrlPrefix'), ''), '', '-aligned'),'.json')]",
        "networkSecurityGroupTemplate": "[concat(parameters('baseUrl'),'/shared/networkSecurityGroup-',parameters('networkSecurityGroupNewOrExisting'),'.json')]",
        "interfaceWanTemplate": "[concat(parameters('baseUrl'),'/shared/interface-wan.json')]",
        "interfaceLanTemplate": "[concat(parameters('baseUrl'),'/shared/interface-lan.json')]",
        "interfaceLBTemplate": "[concat(parameters('baseUrl'),'/shared/interface-lb.json')]",
        "vmTemplate": "[concat(parameters('baseUrl'),if(equals(parameters('devFwBlobUrlPrefix'), ''), '/shared/vm.json', '/shared/vm_dev.json'))]",
        "LBTemplate": "[concat(parameters('baseUrl'),'/shared/loadbalancer.json')]",
        "publicIpType": "Dynamic",
        "apiVersion": {
            "resources": {
                "deployments": "2016-02-01"
            }
        }
    },
    "resources": [
        {
            "name": "SettingUpAvailabilitySet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('availabilitySetTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "availabilitySetName": {
                        "value": "[parameters('availabilitySetName')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageName')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageType')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('storageRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpNetworkSecurityGroup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('networkSecurityGroupTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[parameters('networkSecurityGroupName')]"
                    },
                    "trustedNetwork": {
                        "value": "[parameters('trustedNetwork')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIpTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIPAddressName": {
                        "value": "[parameters('publicIpName')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIpType')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIpDNS')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('publicIpRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('netTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('netName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('netPrefix')]"
                    },
                    "Subnet1Name": {
                        "value": "[parameters('wanName')]"
                    },
                    "Subnet1Prefix": {
                        "value": "[parameters('wanPrefix')]"
                    },
                    "Subnet2Name": {
                        "value": "[parameters('lanName')]"
                    },
                    "Subnet2Prefix": {
                        "value": "[parameters('lanPrefix')]"
                    },
                    "vnetExistingRGName": {
                        "value": "[parameters('netRG')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpInterfaceWan",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceWanTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[parameters('nicWan')]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet1Ref.value]"
                    },
                    "publicIpId": {
                        "value": "[reference('SettingUpPublicIP').outputs.publicIpId.value]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[reference('SettingUpNetworkSecurityGroup','2015-01-01').outputs.networkSecurityGroupName.value]"
                    }
                }
            }
        },
        {
            "name": "SettingUpInterfaceLan",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLanTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[parameters('nicLan')]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
                    }
                }
            }
        },
        {
            "name": "SettingUpVm",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceWan')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceLan')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpAvailabilitySet')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "imageSku": {
                        "value": "[parameters('imageSku')]"
                    },
                    "availabilitySetId": {
                        "value": "[reference('SettingUpAvailabilitySet').outputs.availabilitySetId.value]"
                    },
                    "storageAccountEndpoint": {
                        "value": "[reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value]"
                    },
                    "interfaceRefWan": {
                        "value": "[reference('SettingUpInterfaceWan','2015-01-01').outputs.interfaceRef.value]"
                    },
                    "interfaceRefLan": {
                        "value": "[reference('SettingUpInterfaceLan','2015-01-01').outputs.interfaceRef.value]"
                    },
                    "devFwBlobUrlPrefix": {
                        "value": "[parameters('devFwBlobUrlPrefix')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
            "type": "string"
        }
    }
}